{"version":3,"sources":["NewTodo.js","TodoItem.js","TodoList.js","TodosFilter.js","App.js","index.js"],"names":["NewTodo","state","titleInput","handleInputChange","event","_this","setState","target","value","handleSubmit","preventDefault","_ref","replace","addTodo","props","id","Date","title","completed","this","react_default","a","createElement","onSubmit","className","type","placeholder","maxLength","onChange","React","Component","TodoItem","todo","handleCheck","handleDestroy","checked","htmlFor","onClick","TodoList","todos","selectedFilter","filter","todoItem","map","src_TodoItem","key","Filter","handleClick","children","href","concat","toLowerCase","App","todoList","allCompleted","handleAddingTodo","newTodo","Object","toConsumableArray","handleCheckItem","_ref2","item","objectSpread2","_ref3","every","handleDestroyItem","_ref4","handleCompleteAll","_ref5","handleSelectActive","handleSelectCompleted","handleSelectAll","handleClear","_ref6","_this$state","src_NewTodo","length","src_TodoList","TodosFilter","some","ReactDOM","render","src_App","document","getElementById"],"mappings":"iRAoDeA,6MAhDbC,MAAQ,CAAEC,WAAY,MAEtBC,kBAAoB,SAACC,GACnBC,EAAKC,SAAS,CACZJ,WAAYE,EAAMG,OAAOC,WAI7BC,aAAe,SAACL,GACdA,EAAMM,iBAENL,EAAKC,SAAS,SAAAK,GAAoB,IAAjBT,EAAiBS,EAAjBT,WACf,OAAKA,EAAWU,QAAQ,OAAQ,MAMhCC,EAFoBR,EAAKS,MAAjBD,SAEA,CACNE,IAAK,IAAIC,KACTC,MAAOf,EACPgB,WAAW,IAGN,CAAEhB,WAAY,KAXZ,CAAEA,yFAeN,IACCA,EAAeiB,KAAKlB,MAApBC,WAER,OACEkB,EAAAC,EAAAC,cAAA,QAAMC,SAAUJ,KAAKV,cACnBW,EAAAC,EAAAC,cAAA,SACEE,UAAU,WACVC,KAAK,OACLjB,MAAON,EACPwB,YAAY,yBACZC,UAAW,GACXC,SAAUT,KAAKhB,4BAxCH0B,IAAMC,WC+BbC,EA/BE,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,KAAMC,EAATtB,EAASsB,YAAaC,EAAtBvB,EAAsBuB,cAAtB,OACfd,EAAAC,EAAAC,cAAA,MAAIE,UAAWQ,EAAKd,UAAY,YAAc,IAC5CE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACLD,UAAU,SACVT,GAAG,OACHoB,QAASH,EAAKd,UACdU,SAAU,kBAAMK,EAAYD,EAAKjB,OAEnCK,EAAAC,EAAAC,cAAA,SAAOc,QAAQ,UAAUJ,EAAKf,OAC9BG,EAAAC,EAAAC,cAAA,UACEG,KAAK,SACLD,UAAU,UACVa,QAAS,kBAAMH,EAAcF,EAAKjB,UCqB3BuB,EAlCE,SAAA3B,GAAA,IAAG4B,EAAH5B,EAAG4B,MAAON,EAAVtB,EAAUsB,YAAaC,EAAvBvB,EAAuBuB,cAAeM,EAAtC7B,EAAsC6B,eAAtC,OACfpB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACXe,EAAME,OAAO,SAACC,GACb,MAAuB,WAAnBF,GACME,EAASxB,UAGI,cAAnBsB,GACKE,EAASxB,YAIjByB,IAAI,SAAAD,GAAQ,OACbtB,EAAAC,EAAAC,cAACsB,EAAD,CACEZ,KAAMU,EACNG,IAAKH,EAAS3B,GACdkB,YAAaA,EACbC,cAAeA,QCARY,EAlBA,SAAAnC,GAAA,IAAGoC,EAAHpC,EAAGoC,YAAaC,EAAhBrC,EAAgBqC,SAAUR,EAA1B7B,EAA0B6B,eAA1B,OACbpB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACE2B,KAAI,KAAAC,OAAoB,QAAbF,EAAqB,GAAKA,EAASG,eAC9C3B,UAAWgB,IAAmBQ,EAAW,WAAa,GACtDX,QAASU,GAERC,KCmIQI,6MAvIbnD,MAAQ,CACNoD,SAAU,GAAIC,cAAc,EAAOb,OAAQ,SAG7Cc,iBAAmB,SAACC,GAClBnD,EACGC,SAAS,SAAAK,GAAA,IAAG0C,EAAH1C,EAAG0C,SAAH,MAAmB,CAAEA,SAAQ,GAAAH,OAAAO,OAAAC,EAAA,EAAAD,CAAMJ,GAAN,CAAgBG,UAG3DG,gBAAkB,SAAC5C,GACjBV,EACGC,SAAS,SAAAsD,GAAA,MACR,CAAEP,SADMO,EAAGP,SACUV,IAAI,SAAAkB,GAAI,OAC3BA,EAAK9C,KAAOA,EAAZ0C,OAAAK,EAAA,EAAAL,CAAA,GACKI,EADL,CACW3C,WAAY2C,EAAK3C,YACxB2C,OAEVxD,EAAKC,SAAS,SAAAyD,GAAA,MACZ,CAAET,aADUS,EAAGV,SACUW,MAAM,SAAAH,GAAI,OAAIA,EAAK3C,kBAIhD+C,kBAAoB,SAAClD,GACnBV,EAAKC,SAAS,SAAA4D,GAAA,MACZ,CAAEb,SADUa,EAAGb,SAEZZ,OAAO,SAAAoB,GAAI,OAAIA,EAAK9C,KAAOA,UAIlCoD,kBAAoB,WAClB9D,EACGC,SAAS,SAAA8D,GAAA,IAAGf,EAAHe,EAAGf,SAAUC,EAAbc,EAAad,aAAb,MAAiC,CACzCA,cAAeA,EACfD,SAAUA,EACPV,IAAI,SAAAkB,GAAI,OAAAJ,OAAAK,EAAA,EAAAL,CAAA,GACJI,EADI,CACE3C,WAAYoC,YAK/Be,mBAAqB,WACnBhE,EACGC,SAAS,CAAEmC,OAAQ,cAGxB6B,sBAAwB,WACtBjE,EACGC,SAAS,CAAEmC,OAAQ,iBAGxB8B,gBAAkB,WAChBlE,EACGC,SAAS,CAAEmC,OAAQ,WAGxB+B,YAAa,WACXnE,EAAKC,SAAS,SAAAmE,GAAA,MACZ,CAAEpB,SADUoB,EAAGpB,SAEZZ,OAAO,SAAAoB,GAAI,OAAKA,EAAK3C,wFAInB,IAAAwD,EACoCvD,KAAKlB,MAAxCoD,EADDqB,EACCrB,SAAUZ,EADXiC,EACWjC,OAAQa,EADnBoB,EACmBpB,aAE1B,OACElC,EAAAC,EAAAC,cAAA,WAASE,UAAU,WACjBJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UAChBJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACqD,EAAD,CAAS9D,QAASM,KAAKoC,oBAGzBnC,EAAAC,EAAAC,cAAA,WAASE,UAAU,QACjBJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACLV,GAAG,aACHS,UAAU,aACVI,SAAUT,KAAKgD,kBACfhC,QAASmB,IAEVD,EAASuB,OAAS,GACjBxD,EAAAC,EAAAC,cAAA,SAAOc,QAAQ,cACZkB,EAAe,qBAAuB,yBAG3ClC,EAAAC,EAAAC,cAACuD,EAAD,CACEtC,MAAOc,EACPb,eAAgBC,EAChBR,YAAad,KAAKwC,gBAClBzB,cAAef,KAAK8C,qBAGvBZ,EAASuB,OAAS,GACjBxD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UAChBJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,cAAhB,GAAA0B,OACMG,EAASZ,OAAO,SAAAoB,GAAI,OAAKA,EAAK3C,YAAW0D,OAD/C,gBAIAxD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WACZJ,EAAAC,EAAAC,cAACwD,EAAD,CACE/B,YAAa5B,KAAKoD,gBAClB/B,eAAgBC,GAFlB,OAMArB,EAAAC,EAAAC,cAACwD,EAAD,CACE/B,YAAa5B,KAAKkD,mBAClB7B,eAAgBC,GAFlB,UAMArB,EAAAC,EAAAC,cAACwD,EAAD,CACE/B,YAAa5B,KAAKmD,sBAClB9B,eAAgBC,GAFlB,cAQDY,EAAS0B,KAAK,SAAAlB,GAAI,OAAIA,EAAK3C,aAC1BE,EAAAC,EAAAC,cAAA,UACEG,KAAK,SACLD,UAAU,kBACVa,QAASlB,KAAKqD,aAHhB,4BAzHI3C,IAAMC,WCCxBkD,IAASC,OACP7D,EAAAC,EAAAC,cAAC4D,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.db6d021d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends React.Component {\n  state = { titleInput: '' };\n\n  handleInputChange = (event) => {\n    this.setState({\n      titleInput: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState(({ titleInput }) => {\n      if (!titleInput.replace(/^\\s+/, '')) {\n        return { titleInput };\n      }\n\n      const { addTodo } = this.props;\n\n      addTodo({\n        id: +new Date(),\n        title: titleInput,\n        completed: false,\n      });\n\n      return { titleInput: '' };\n    });\n  };\n\n  render() {\n    const { titleInput } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          className=\"new-todo\"\n          type=\"text\"\n          value={titleInput}\n          placeholder=\"What needs to be done?\"\n          maxLength={30}\n          onChange={this.handleInputChange}\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = { addTodo: PropTypes.func.isRequired };\n\nexport default NewTodo;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst TodoItem = ({ todo, handleCheck, handleDestroy }) => (\n  <li className={todo.completed ? 'completed' : ''}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id=\"todo\"\n        checked={todo.completed}\n        onChange={() => handleCheck(todo.id)}\n      />\n      <label htmlFor=\"todo-1\">{todo.title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => handleDestroy(todo.id)}\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes\n    .shape({\n      completed: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired,\n  handleCheck: PropTypes.func.isRequired,\n  handleDestroy: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, handleCheck, handleDestroy, selectedFilter }) => (\n  <ul className=\"todo-list\">\n    {todos.filter((todoItem) => {\n      if (selectedFilter === 'Active') {\n        return !todoItem.completed;\n      }\n\n      if (selectedFilter === 'Completed') {\n        return todoItem.completed;\n      }\n\n      return true;\n    }).map(todoItem => (\n      <TodoItem\n        todo={todoItem}\n        key={todoItem.id}\n        handleCheck={handleCheck}\n        handleDestroy={handleDestroy}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes\n    .arrayOf(PropTypes.shape({\n      completed: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    })).isRequired,\n  handleCheck: PropTypes.func.isRequired,\n  handleDestroy: PropTypes.func.isRequired,\n  selectedFilter: PropTypes.string.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ handleClick, children, selectedFilter }) => (\n  <li>\n    <a\n      href={`#/${children === 'All' ? '' : children.toLowerCase()}`}\n      className={selectedFilter === children ? 'selected' : ''}\n      onClick={handleClick}\n    >\n      {children}\n    </a>\n  </li>\n);\n\nFilter.propTypes = {\n  children: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  selectedFilter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport NewTodo from './NewTodo';\nimport TodoList from './TodoList';\nimport Filter from './TodosFilter';\n\nclass App extends React.Component {\n  state = {\n    todoList: [], allCompleted: false, filter: 'All',\n  };\n\n  handleAddingTodo = (newTodo) => {\n    this\n      .setState(({ todoList }) => ({ todoList: [...todoList, newTodo] }));\n  };\n\n  handleCheckItem = (id) => {\n    this\n      .setState(({ todoList }) => (\n        { todoList: todoList.map(item => (\n          item.id === id ? {\n            ...item, completed: !item.completed,\n          } : item)) }));\n\n    this.setState(({ todoList }) => (\n      { allCompleted: todoList.every(item => item.completed) }\n    ));\n  };\n\n  handleDestroyItem = (id) => {\n    this.setState(({ todoList }) => (\n      { todoList: todoList\n        .filter(item => item.id !== id) }\n    ));\n  };\n\n  handleCompleteAll = () => {\n    this\n      .setState(({ todoList, allCompleted }) => ({\n        allCompleted: !allCompleted,\n        todoList: todoList\n          .map(item => ({\n            ...item, completed: !allCompleted,\n          })),\n      }));\n  };\n\n  handleSelectActive = () => {\n    this\n      .setState({ filter: 'Active' });\n  };\n\n  handleSelectCompleted = () => {\n    this\n      .setState({ filter: 'Completed' });\n  };\n\n  handleSelectAll = () => {\n    this\n      .setState({ filter: 'All' });\n  };\n\n  handleClear= () => {\n    this.setState(({ todoList }) => (\n      { todoList: todoList\n        .filter(item => !item.completed) }\n    ));\n  };\n\n  render() {\n    const { todoList, filter, allCompleted } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo addTodo={this.handleAddingTodo} />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.handleCompleteAll}\n            checked={allCompleted}\n          />\n          {todoList.length > 0 && (\n            <label htmlFor=\"toggle-all\">\n              {allCompleted ? 'Mark all as active' : 'Mark all as completed'}\n            </label>\n          )}\n          <TodoList\n            todos={todoList}\n            selectedFilter={filter}\n            handleCheck={this.handleCheckItem}\n            handleDestroy={this.handleDestroyItem}\n          />\n        </section>\n        {todoList.length > 0 && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${todoList.filter(item => !item.completed).length} items left`}\n            </span>\n\n            <ul className=\"filters\">\n              <Filter\n                handleClick={this.handleSelectAll}\n                selectedFilter={filter}\n              >\n                All\n              </Filter>\n              <Filter\n                handleClick={this.handleSelectActive}\n                selectedFilter={filter}\n              >\n                Active\n              </Filter>\n              <Filter\n                handleClick={this.handleSelectCompleted}\n                selectedFilter={filter}\n              >\n                Completed\n              </Filter>\n            </ul>\n\n            {todoList.some(item => item.completed) && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={this.handleClear}\n              >\n                Clear completed\n              </button>\n            )}\n          </footer>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}