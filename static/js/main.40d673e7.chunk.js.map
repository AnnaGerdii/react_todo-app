{"version":3,"sources":["TodoHeader.js","TodosFilter.js","TodoFooter.js","TodoItem.js","TodoList.js","AppMain.js","App.js","index.js"],"names":["TodoHeader","state","titleInput","handleInputChange","event","_this","setState","target","value","handleSubmit","preventDefault","_ref","replace","addTodo","props","id","Date","title","completed","this","react_default","a","createElement","className","onSubmit","type","placeholder","maxLength","onChange","React","Component","Filter","handleClick","children","selectedFilter","href","concat","cn","selected","toLowerCase","onClick","TodoFooter","todos","currentFilter","handleFilter","handleClearButton","filter","item","length","TodosFilter","some","TodoItem","todo","handleCheck","handleDelete","checked","htmlFor","TodoList","map","todoItem","src_TodoItem","key","TodoMain","allCompleted","completeAll","todosLength","src_TodoList","FILTER_TYPES","all","active","App","todoList","handleAddingTodo","prevState","Object","toConsumableArray","toggleTodoCompleted","objectSpread2","_ref2","every","deleteTodo","_ref3","selectAllTodos","_ref4","setFilter","clearCompletedTodos","_ref5","_this$state","visibleTodos","filterParam","getFilteredTodos","src_TodoHeader","AppMain","src_TodoFooter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.40d673e7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoHeader extends React.Component {\n  state = { titleInput: '' };\n\n  handleInputChange = (event) => {\n    this.setState({\n      titleInput: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState(({ titleInput }) => {\n      if (!titleInput.replace(/^\\s+/, '')) {\n        return { titleInput };\n      }\n\n      const { addTodo } = this.props;\n\n      addTodo({\n        id: +new Date(),\n        title: titleInput,\n        completed: false,\n      });\n\n      return { titleInput: '' };\n    });\n  };\n\n  render() {\n    const { titleInput } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            className=\"new-todo\"\n            type=\"text\"\n            value={titleInput}\n            placeholder=\"What needs to be done?\"\n            maxLength={30}\n            onChange={this.handleInputChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nTodoHeader.propTypes = { addTodo: PropTypes.func.isRequired };\n\nexport default TodoHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nconst Filter = ({ handleClick, children, selectedFilter }) => (\n  <li>\n    <a\n      href={`#/${selectedFilter === 'all' ? '' : selectedFilter}`}\n      className={cn({ selected: selectedFilter === children.toLowerCase() })}\n      onClick={handleClick}\n    >\n      {children}\n    </a>\n  </li>\n);\n\nFilter.propTypes = {\n  children: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  selectedFilter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Filter from './TodosFilter';\n\nconst TodoFooter\n  = ({ todos, currentFilter, handleFilter, handleClearButton }) => (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${todos.filter(item => !item.completed).length} items left`}\n      </span>\n      <ul className=\"filters\">\n        <Filter\n          handleClick={() => handleFilter('all')}\n          selectedFilter={currentFilter}\n        >\n          All\n        </Filter>\n        <Filter\n          handleClick={() => handleFilter('active')}\n          selectedFilter={currentFilter}\n        >\n          Active\n        </Filter>\n        <Filter\n          handleClick={() => handleFilter('completed')}\n          selectedFilter={currentFilter}\n        >\n          Completed\n        </Filter>\n      </ul>\n      {todos.some(item => item.completed) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={handleClearButton}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n\nTodoFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  currentFilter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n  handleClearButton: PropTypes.func.isRequired,\n};\n\nexport default TodoFooter;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport cn from 'classnames';\n\nconst TodoItem = ({ todo, handleCheck, handleDelete }) => (\n  <li className={cn({ completed: todo.completed })}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={todo.id}\n        checked={todo.completed}\n        onChange={() => handleCheck(todo.id)}\n      />\n      <label htmlFor={todo.id}>{todo.title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => handleDelete(todo.id)}\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes\n    .shape({\n      completed: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired,\n  handleCheck: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, handleCheck, handleDelete }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todoItem => (\n      <TodoItem\n        todo={todoItem}\n        key={todoItem.id}\n        handleCheck={handleCheck}\n        handleDelete={handleDelete}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes\n    .arrayOf(PropTypes.shape({\n      completed: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    })).isRequired,\n  handleCheck: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoList from './TodoList';\n\nconst TodoMain = (props) => {\n  const\n    { todos, allCompleted, handleCheck, handleDelete, completeAll, todosLength }\n    = props;\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onChange={completeAll}\n        checked={allCompleted}\n      />\n      {todosLength > 0 && (\n        <label htmlFor=\"toggle-all\">\n          {allCompleted ? 'Mark all as active' : 'Mark all as completed'}\n        </label>\n      )}\n      <TodoList\n        todos={todos}\n        handleCheck={handleCheck}\n        handleDelete={handleDelete}\n      />\n    </section>\n  );\n};\n\nTodoMain.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  allCompleted: PropTypes.bool.isRequired,\n  handleCheck: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  completeAll: PropTypes.func.isRequired,\n  todosLength: PropTypes.number.isRequired,\n};\n\nexport default TodoMain;\n","import React from 'react';\nimport TodoHeader from './TodoHeader';\nimport TodoFooter from './TodoFooter';\nimport TodoMain from './AppMain';\n\nconst FILTER_TYPES = {\n  all: 'all',\n  completed: 'completed',\n  active: 'active',\n};\n\nclass App extends React.Component {\n  state = {\n    todoList: [], allCompleted: false, filter: FILTER_TYPES.all,\n  };\n\n  handleAddingTodo = (todo) => {\n    this.setState(prevState => ({ todoList: [...prevState.todoList, todo] }));\n  };\n\n  toggleTodoCompleted = (id) => {\n    this.setState(({ todoList }) => (\n      { todoList: todoList.map(item => (\n        item.id === id ? {\n          ...item, completed: !item.completed,\n        } : item)) }));\n\n    this.setState(({ todoList }) => (\n      { allCompleted: todoList.every(item => item.completed) }\n    ));\n  };\n\n  deleteTodo = (id) => {\n    this.setState(({ todoList }) => (\n      { todoList: todoList\n        .filter(item => item.id !== id) }\n    ));\n  };\n\n  selectAllTodos = () => {\n    this.setState(({ todoList, allCompleted }) => ({\n      allCompleted: !allCompleted,\n      todoList: todoList\n        .map(item => ({\n          ...item, completed: !allCompleted,\n        })),\n    }));\n  };\n\n  setFilter = (filter) => {\n    this.setState({ filter: FILTER_TYPES[filter] });\n  };\n\n  clearCompletedTodos= () => {\n    this.setState(({ todoList }) => (\n      { todoList: todoList\n        .filter(item => !item.completed) }\n    ));\n  };\n\n  render() {\n    const { todoList, filter, allCompleted } = this.state;\n    const getFilteredTodos = (filterParam) => {\n      switch (filterParam) {\n        case 'active':\n          return todoList.filter(todo => !todo.completed);\n        case 'completed':\n          return todoList.filter(todo => todo.completed);\n        default:\n          return todoList;\n      }\n    };\n\n    const visibleTodos = getFilteredTodos(filter);\n\n    return (\n      <section className=\"todoapp\">\n        <TodoHeader addTodo={this.handleAddingTodo} />\n        <TodoMain\n          todos={visibleTodos}\n          allCompleted={allCompleted}\n          handleCheck={this.toggleTodoCompleted}\n          handleDelete={this.deleteTodo}\n          completeAll={this.selectAllTodos}\n          todosLength={todoList.length}\n        />\n        {todoList.length > 0 && (\n          <TodoFooter\n            todos={todoList}\n            currentFilter={filter}\n            handleFilter={this.setFilter}\n            handleClearButton={this.clearCompletedTodos}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}